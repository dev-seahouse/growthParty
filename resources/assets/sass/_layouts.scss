$padding-offsets: (
  default: 0,
  small: rem-calc(10px),
  medium: rem-calc(20px),
  large: rem-calc(30px)
);

// ========= Alignments =========

.flex-align-left {
   -webkit-align-self: flex-start;
   align-self: flex-start;
  margin-right: auto;

}

.flex-align-right {
   -webkit-align-self: flex-end;
   align-self: flex-end;
  margin-left:auto;
}

// for each breakpoint, add breakpoint-{#hdir} flex classes
@include -zf-each-breakpoint {
  @each $hdir, $prop in $-zf-flex-justify {
    .row{
      .#{$-zf-size}-#{$hdir} {
          @include flex-align($x: $hdir);
       }
    }

  }
}

img.l-img-restraint-width {
  max-width: 200px;
}


// ======= paddings =====

// generates vertical and horizontal padding
// based on $padding-offsets map

@each $key, $value in $padding-offsets {
  @if ($key == default) {
    .l-padded {
      @include v-and-h-padding($value)
    }

    .l-v-padded {
      @include v-padding($value)
    }

    .l-h-padded {
      @include h-padding($value)
    }
  }@else {
    .l-#{$key}-padded {
      @include v-and-h-padding($value);
    }

    .l-#{$key}-v-padded {
      @include v-padding($value);
    }

    .l-#{$key}-h-padded {
      @include h-padding($value);
    }
  }
}

.p-b-0 {
  padding-bottom: 0;
}

// ====  Component specific layouts

.l-logo-text {
  @extend.flex-align-left;
  padding-top:rem_calc(15px);
  padding-left:rem_calc(15px);
}

img.logo {
  max-width:rem_calc(50px);
  margin-left:20px;
  margin-right:20px
}